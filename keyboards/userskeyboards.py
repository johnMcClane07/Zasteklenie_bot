from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from prices import ADDITIONAL_SERVICES
from config import MANAGER_TELEGRAM_USERNAME
from handlers.admin import load_faq_data
from prices import DATA


def main_menu_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calculate")],
        [InlineKeyboardButton(text="üñº –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç", callback_data="examples")],
        [InlineKeyboardButton(text="‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton(text="üì© –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="apply")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", callback_data="contact_manager")],
        [InlineKeyboardButton(text="ü§ñ –ù–∞–ø–∏—Å–∞—Ç—å –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫—É", callback_data="chat_with_ai")]
    ])


def pagination_keyboard(page: int):
    TOTAL_PAGES = len(DATA)
    buttons = [
        [
            InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"page_{page-1}") if page > 1 else InlineKeyboardButton(text=" ", callback_data="none"),
            InlineKeyboardButton(text=f"{page}/{TOTAL_PAGES}", callback_data="none"),
            InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"page_{page+1}") if page < TOTAL_PAGES else InlineKeyboardButton(text=" ", callback_data="none")
        ],
        [
            InlineKeyboardButton(text="‚úÖ –í—ã–±—Ä–∞—Ç—å", callback_data=f"select_type_{page}") 
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)



def choose_complection_keyboard(i: int):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –í—ã–±—Ä–∞—Ç—å", callback_data=f"select_complection_{i}")]
        ]
    )

def choose_extras_keyboard():
    inline_keyboard = []
    
    for extra in ADDITIONAL_SERVICES:
        button = InlineKeyboardButton(text=extra["name"], callback_data=f"select_extra_{extra['index']}")
        inline_keyboard.append([button])  

    inline_keyboard.append([InlineKeyboardButton(text="‚ùå –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –±–µ–∑ –¥–æ–ø. —É—Å–ª—É–≥", callback_data="count_cost")])

    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
    
    return keyboard


def clear_extras_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å", callback_data="clear_extras")],
        [InlineKeyboardButton(text="üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="count_cost")]

        
    ])

def back_to_main_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="calculate")],
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def back_to_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def contact_manager_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url=f"https://t.me/{MANAGER_TELEGRAM_USERNAME}")],
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])


def faq_keyboard():
    FAQ_DATA = load_faq_data()
    inline_keyboard = []

    for key, value in FAQ_DATA.items():
        question = value[0] 
        button = InlineKeyboardButton(text=question, callback_data=f"faq_{key}")
        inline_keyboard.append([button]) 

    back_button = InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="main_menu")
    inline_keyboard.append([back_button])

    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

    return keyboard

def back_to_faq_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="faq")]
    ])





